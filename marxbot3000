#!usr/bin/env python
##marxbot3000
##by Zoe Smith

import tweepy
import random

from tokens import *

auth = tweepy.OAuthHandler(C_KEY, C_SECRET)  
auth.set_access_token(A_TOKEN, A_TOKEN_SECRET)  
api = tweepy.API(auth)

bad_isms = ["maoism", "third worldism", "social democracy", "Hoxhaism", "capitalism", "idealism", "gender", "Trotskyism", "actually existing socialism", "socialism in one country"]
good_isms = ["materialism", "socialism", "material analysis", "proletarian revolution", "communism"]
people = ["Noam Chomsky", "Bernie Sanders", "Justin Trudeau", "Jeremy Corbyn", "Hillary", "Hoxha", "Tito"]
verbs = ["cuck", "vore", "end", "kill", "stop", "fuck", "smash", "steal"] 
good_nouns = ["materialist analysis", "dialectics", "revolutions", "proletarian revolution", "labor theory of value", "tendency of rate of profit to fall", "critique of political economy", "class war"]
bad_nouns = ["labor-power", "wage labor", "surplus value", "states", "discourse", "gender"]
the_good_nouns = ["the proletariat", "the dialectic", "the Paris Commune", "the dicatorship of the proletariat"]
the_bad_nouns = ["the bourgeoisie", "the discourse", "the state", "the means of production"]
memes = ["dat boi", "primitivism", "technophilia", "discourse", "dank memes", "Lisa Frank", "Chilis", "Shrek", "Banksy", "Overwatch", "Captain America", "pineapple pizza", "Kojima"]
good_starts_long = ["Please don't ", "You can't ", "You wouldn't ", "Why would you ", "I'd rather not "]
bad_starts_long = ["Guess who's about to ", "Time to ", "I'm gonna ", "I have to ", "I will "]
good_starts = ["You come into my house, you disrespect my ", "have you considered,,,,perhaps???", "Fully automated luxury ", "The signs as ", "Defend "]
bad_starts = ["delete your ", "Please tag your ", "blocked. blocked. blocked. none of you are free of ", "Fuck "]
idealists = ["liberals", "fascists", "reactionaries", "tankies", "primmies", "techies", "hoxhaists", "social democrats"]
marxists = ["Engels", "Gramsci", "Luxemburg", "Althusser", "Foucault", "Zizek", "David Harvey", "Lukacs", "Bordiga", "Adorno"]

nouns = good_nouns + bad_nouns

the_nouns = the_good_nouns + the_bad_nouns

def stole_fizzy(lst):
    return random.choice(lst) + " STOLE fizzy lifting drinks!!!"

def big_bunch_of_shit(lst):
    return "I've never heard of this " + random.choice(lst) \
    + " but it sounds like a big bunch of shit to me"

def friends_we_made(lst):
    return "The real " + random.choice(lst) + " was the friends we made along the way"

def all_along(lst):
    return "Maybe the " + random.choice(lst) + " was inside us all along"

def rand_shitpost_long(list1, list2, list3):
    return random.choice(list1) + random.choice(list2) + " " + random.choice(list3)

def rand_shitpost(list1, list2):
    return random.choice(list1) + random.choice(list2)

def sneme(x):
    new_string = ""
    vowels = "aeiou"
    if x[0] in vowels:
	new_string += "sn" + x + " (snail " + x + ")"
	return new_string
    else:
        new_string += "sn"
	for i in range(1, len(x)):
	    new_string += x[i]
	new_string += " (snail " + x + ")"
	return new_string

def snakememe(x):
    new_string = ""
    vowels = "aeiou"
    if x[0] in vowels:
		new_string += "snake " + x + ", or sn" + x + ", control our government at the highest level"
		return new_string
    else:
        new_string += "snake " + x + ", or sn"
	for i in range(1, len(x)):
		new_string += x[i]
	new_string += ", control our government at the highest level"
	return new_string

def is_communist(x):
    new_list = ["liberal", "communist", "revisionism", "counter-revolutionary", "reactionary", "revolutionary", "proletarian", "bourgeois"]
    return random.choice(x) + " is " + random.choice(new_list)

double_list = marxists + people

def say_fuck(x):
    return "Let " + random.choice(x) + " say fuck!!!"

big_list = good_isms + bad_isms + nouns

def gotdamn_feet(x):
    return "he Boot Too Big For He Gotdamn " + random.choice(x)

def su(x):
    return "Garnet, Amethyst, and Pearl... and " + random.choice(x)

mccree_list = marxists + idealists + bad_isms + good_isms

def mccree(x):
	return "*McCree voice*: It's high " + random.choice(x)

def talking_heads(x, y):
	return "This is not my beautiful " + random.choice(x) + "!!! This is not my beautiful " + random.choice(y) + "!!!"

good_stuff = good_nouns + good_isms

def cheap_tactic(x, y):
	return random.choice(x) + " is just a cheap tactic to make weak " + random.choice(y) + " stronger"

dark_list = good_isms + marxists

def dark(x, y):
	item1 = random.choice(x)
	item2 = random.choice(y)
	return "Dark " + item1 + " show me the forbidden " + item2

really_big_list = mccree_list + people + nouns + the_nouns

def tag(x):
	return "Tag yourself I'm " + random.choice(x)

def fuckers(x):
	return "You fuckers don't know about my " + random.choice(x)

post1 = stole_fizzy(people)
post2 = big_bunch_of_shit(bad_isms)
post3 = friends_we_made(nouns)
post4 = all_along(nouns)
post5 = rand_shitpost_long(bad_starts_long, verbs, bad_nouns)
post6 = rand_shitpost(good_starts, good_nouns)
post7 = rand_shitpost(bad_starts, bad_nouns)
post8 = sneme(random.choice(good_isms))
post9 = sneme(random.choice(nouns))
post10 = is_communist(memes)
post11 = snakememe(random.choice(idealists))
post12 = gotdamn_feet(big_list)
post13 = su(marxists)
post14 = say_fuck(double_list)
post15 = rand_shitpost_long(bad_starts_long, verbs, the_bad_nouns)
post16 = rand_shitpost_long(good_starts_long, verbs, the_good_nouns)
post17 = mccree(mccree_list)
post18 = talking_heads(good_isms, good_nouns)
post19 = talking_heads(good_nouns, good_isms)
post20 = cheap_tactic(bad_isms, good_stuff)
post21 = dark(dark_list, good_nouns)
post22 = tag(really_big_list)
post23 = fuckers(good_nouns)

l = [post1, post2, post3, post4, post5, post6, post7, post8, post9, post10, post11, post12, post13, post14, post15, post15, post16, post17, post18, post19, post20, post21, post22, post23]

def post(lst):
    return random.choice(lst)

##collect the most recent 200 tweets in a list
statuses = []
tweet_objs = api.user_timeline(screen_name = "marxbot3000", count = 200)

for tweet in tweet_objs:
    statuses.append(tweet.text)

new_post = post(l)

if new_post not in statuses:
    api.update_status(new_post)
else:
    print new_post
